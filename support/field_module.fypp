! Rank and shape definitions for simple templating
!
! Note that the ranks encode coneptual dimensions here, eg. FIELD_RB2D encodes
! a surface field and FIELD_RB3D represents a field with a vertical component.
#:include "field_definition.hypp"

MODULE FIELD_MODULE
  ! The FIELD types provided by this module provide data abstractions that
  ! decouple data storage in memory from the data views used in thread-parallel
  ! sections of the code. They are intended to thinly wrap ATLAS_FIELD
  ! objects and provide additional features that may later be
  ! incorporated into Atlas. They can also provide backward-compatibility
  ! for non-Atlas execution modes.

USE FIELD_MODULE_DEF

#ifdef PARKIND1_SINGLE
USE FIELD_MODULE_DEF, ONLY : &
#:for rank in ranks
    & FIELD_RB${rank}$D_OWNER => FIELD_RM${rank}$D_OWNER, FIELD_RB${rank}$D_WRAPPER => FIELD_RM${rank}$D_WRAPPER, &
    & FIELD_RB${rank}$D => FIELD_RM${rank}$D, FIELD_RB${rank}$D_VIEW => FIELD_RM${rank}$D_VIEW, FIELD_RB${rank}$D_PTR => FIELD_RM${rank}$D_PTR, &
#:endfor
    & FIELD_BASIC
#else
USE FIELD_MODULE_DEF, ONLY : &
#:for rank in ranks
    & FIELD_RB${rank}$D_OWNER => FIELD_RD${rank}$D_OWNER, FIELD_RB${rank}$D_WRAPPER => FIELD_RD${rank}$D_WRAPPER, &
    & FIELD_RB${rank}$D => FIELD_RD${rank}$D, FIELD_RB${rank}$D_VIEW => FIELD_RD${rank}$D_VIEW, FIELD_RB${rank}$D_PTR => FIELD_RD${rank}$D_PTR, &
#:endfor
    & FIELD_BASIC
#endif

IMPLICIT NONE

END MODULE
